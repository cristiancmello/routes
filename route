#!/usr/bin/env node

const { rl, randomId } = require("./bootstrap");

function reverseString(str) {
  return str.split("").reverse().join("");
}

class Route {
  contructor(input) {
    // console.log(input);
  }

  generate = () => {
    const routeId = process.argv[2] || randomId();
    const reverseId = reverseString(routeId);

    return {
      id: routeId,
      reverseId,
    };
  };

  write = () => {
    console.log(JSON.stringify(this.generate()));
  };
}

rl.on("line", (input) => {
  const route = new Route(input);

  route.write();
});

// rl.on("line", function (line) {
//   const routeId = process.argv[2] || randomId();
//   const reverseId = reverseString(routeId);

//   const processData = (line) => {
//     try {
//       body = JSON.parse(line);
//     } catch (e) {
//       body = line;
//     }

//     return {
//       body,
//     };
//   };

//   const processRoute = (route, data) => {
//     return {
//       ...route,
//       data,
//     };
//   };

//   let data = processData(line);

//   let route = {
//     id: routeId,
//     reverseId,
//     data,
//   };

//   let output = [route];

//   try {
//     let parsedLine = JSON.parse(line);
//     let lastInput = parsedLine.slice(-1).pop();

//     data = {};

//     route = processRoute(route, data);

//     parsedLine.push(route);

//     console.log(JSON.stringify(parsedLine));
//   } catch (e) {
//     const type = typeof data.body;

//     data = {
//       ...data,
//       type,
//     };

//     route = processRoute(route, data);
//     output = [route];

//     console.log(JSON.stringify(output));
//   }
// });
